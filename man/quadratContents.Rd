\name{quadratContents}
\alias{quadratContents}
\title{Identify individuals contained within a quadrat}
\usage{
  quadratContents(positions, quadrat_bounds)
}
\arguments{
  \item{positions}{Data frame of three columns:
  "individuals", "X", and "Y"}

  \item{quadrat_bounds}{Matrix of X Y coordinates of
  quadrats}
}
\value{
  A matrix with species as rows and quadrats as columns.
  Quadrats are unnamed
}
\description{
  Given a spatially explicit data frame of individual
  locations in a simulated arena, and the bounds of a
  series of quadrats, identifies the contents of each
  quadrat.
}
\details{
  Takes a data frame like that returned from
  locationSampler(), and a matrix like that returned from
  quadratPlacer(), and returns the resulting community data
  matrix such as might be generated by someone surveying a
  forest plot.
}
\examples{
library(geiger)
library(colorRamps)

temp <- phyloNtraits(50)

scaled <- scaler(temp[[2]], min.arena=0, max.arena=300)

phydistmatrix <- cophenetic(temp[[1]])

#define a color for each species
cols <- blue2green2red(nrow(phydistmatrix))

positions <- locationSampler(phyloNtraits.results=temp, scaled.results=scaled, mean.log.individuals=4, length.parameter=5000, sd.parameter=50)

#plot the arena. don't close the window
plot(positions$X, positions$Y, pch=20, cex=0.5, xlim=c(0,300), ylim=c(0,300), col=cols[positions$individuals])

bounds <- quadratPlacer(no.quadrats=15, x_max=300, y_max=300, quadrat_size=50)

#plot the arena. don't close the window
plot(positions$X, positions$Y, pch=20, cex=0.5, xlim=c(0,300), ylim=c(0,300), col=cols[positions$individuals])

quadratPlotter(bounds)

#this community data matrix is not in picante format, use t()
temp.cdm <- quadratContents(positions, bounds)
}
\references{
  Miller, Trisos and Farine.
}

