% Generated by roxygen2 (4.0.2): do not edit by hand
\name{arenaTest}
\alias{arenaTest}
\title{Calculate SES of each observed metric + null model combination}
\usage{
arenaTest(results.table, concat.by, metrics)
}
\arguments{
\item{results.table}{Data frame of observed metrics with expected mean, SD and CI bound
in. See example}

\item{concat.by}{Whether to concatenate the results by richness or quadrat. If the
former, observed scores are compared to all randomized scores where the quadrat had the
corresponding richness. If the latter, observed scores (e.g. those from quadrat 1) are
compared to all randomized quadrat 1 scores.}

\item{metrics}{Optional list of named metric functions to use. These
must be defined in the defineMetrics function. If invoked, this option will likely
be used to run a subset of the defined metrics.}
}
\value{
A data frame of standardized effect scores.
}
\description{
Given a table of results, where means, SDs, and CIs are bound to the observed scores at
the corresponding richness or quadrat, this function calculates standardized effect
scores for each observed metric + null model combination. This is intended to be used
to test whether observed values deviate beyond expectations based on the distribution
of SES per arena.
}
\details{
Given a table of results, where means, SDs, and CIs are bound to the observed
scores at the corresponding richness or quadrat, this function calculates standardized
effect scores for each observed metric + null model combination.
}
\examples{
library(dplyr)
library(geiger)
library(picante)

#simulate tree with birth-death process
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)

#simulate a log normal abundance distribution
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1

#simulate a community of varying richness
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)

#run the metrics and nulls combo function
rawResults <- metricsNnulls(tree, cdm)

#reduce the randomizations to a more manageable format
reduced <- reduceRandomizations(rawResults)

#calculate the observed metrics from the input CDM
observed <- observedMetrics(tree, cdm)

#summarize the means, SD and CI of the randomizations
summarized <- lapply(reduced, summaries, concat.by="richness")

#merge the observations and the summarized randomizations to facilitate significance
#testing
merged <- lapply(summarized, merge, observed)

#calculate the standardized scores of each observed metric as compared to the richness
#null model randomization
arenaTest(merged$richness, "richness")

#do the same as above but across all null models
temp <- lapply(1:length(merged), function(x) arenaTest(merged[[x]], "richness"))
}
\references{
Miller, Trisos and Farine.
}

