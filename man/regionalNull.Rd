% Generated by roxygen2 (4.0.2): do not edit by hand
\name{regionalNull}
\alias{regionalNull}
\title{Randomize community data matrix with regional null model}
\usage{
regionalNull(cdm, tree, regional.abundance)
}
\arguments{
\item{cdm}{Picante-style community data matrix with communities/quadrats/plots/etc
as rows and species as columns}

\item{tree}{Ape-style phylogeny}

\item{regional.abundance}{Vector of species names, where each species' name is repeated
the number of times necessary to accomodate its abundance in the regional species pool}
}
\value{
A matrix with all species in the input tree in phylogenetic order, and the same
number of randomized quadrats as used in the input community data matrix
}
\description{
Entirely vectorized null model that maintains species richness (approximately only
during this phase of the calculation, but we do so strictly later on), species
occurrence frequency, and species abundance distributions.
}
\details{
Although not as fast as, e.g. randomizeMatrix, this function still runs
fairly quickly. It works by drawing the total number of
individuals observed in the input plot from the regional abundance vector. Thus, while
a randomized quadrat will not necessarily have the same number of species as the
observed quadrat, over many iterations it will likely be sampled. We can then
concatenate the results by richness at the end, which will only compare observed values
to random quadrats of the same richness. As an example, an observed quadrat might have
two individuals of speciesA and two of speciesB. If the regional abundance vector is
c("spA","spA","spA","spA","spB","spB","spB","spC"), and we draw four individuals, it
would be possible to draw 1, 2, or 3 species, but in general, two species would be seen
in the randomized quadrats.
}
\examples{
library(geiger)
library(colorRamps)

tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)

#prep the data for the simulation
prepped <- prepSimulations(tree, arena.length=300, mean.log.individuals=2,
length.parameter=5000, sd.parameter=50, max.distance=20, proportion.killed=0.2,
competition.iterations=3)

positions <- competitionArena(prepped)

bounds <- quadratPlacer(no.quadrats=15, arena.length=300, quadrat.length=30)

#return a CDM in picante format
cdm <- quadratContents(positions$arena, bounds$quadrat.bounds)

test <- regionalNull(cdm, tree, regional.abundance=abundanceVector(cdm))
}
\references{
Miller, Trisos and Farine.
}

