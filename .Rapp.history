hist(test)
head(test)
test2 <- sample(test, 5)
mean(test2)
test2 <- sample(test, 5)
mean(test2)
test2 <- sample(test, 5)
mean(test2)
test2 <- sample(test, 5)
mean(test2)
test2 <- sample(test, 5)
mean(test2)
test2 <- sample(test, 1000)
mean(test2)
library(phytools)
?phylomorphospace
?fastAnc
library(metricTester)
?summaries
library(dplyr)#
library(geiger)#
library(picante)#
#
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm)#
#
results <- reduceRandomizations(rawResults)
log(1)
log(0.5)
e
ln(e)
library(metricTester)
?summaries
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm)
library(devtools)
install_github("metricTester", username="eliotmiller")
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm)
str(rawResults,2)
packageVersion("geiger")
packageVersion("ape")
packageVersion("phylobase")
install_github("ecoPDcorr",username="eliotmiller")
packageVersion("phylobase")
install.packages("phylobase")
packageVersion("phylobase")
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm)
?getNode
ls()
test
library(metricTester)
metricsNnulls
?metricsNnulls
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=1)
packageVersion("phylobase")
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=1)
install.packages("phylobase")
library(metricTester)
library(ecoPD)
library(ecoPDcorr)
library(metricTester)
?simulateComm
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)
cdm
ecoPD.cdm <- suppressWarnings(phylo4com(tree, t(cdm)))
ecoPD.cdm
?getNode
ls()
library(phylobase)
packageVersion("phylobase")
?getNode
data(geospiza)#
  nodeLabels(geospiza) <- LETTERS[1:nNodes(geospiza)]#
  plot(as(geospiza, "phylo4"), show.node.label=TRUE)#
  getNode(geospiza, 18)
getNode(geospiza, "D")
install.packages("phylobase")
?getNode
data(geospiza)#
  nodeLabels(geospiza) <- LETTERS[1:nNodes(geospiza)]#
  plot(as(geospiza, "phylo4"), show.node.label=TRUE)#
  getNode(geospiza, 18)
library(phylobase)
data(geospiza)#
  nodeLabels(geospiza) <- LETTERS[1:nNodes(geospiza)]#
  plot(as(geospiza, "phylo4"), show.node.label=TRUE)#
  getNode(geospiza, 18)
install.packages("ecoPD")
library(ecoPDcorr)
?pae
pae(weeds)
packageVersion(phylobase)
?phylo4com
data(weeds.data)#
  data(weeds.tree)#
  phylo4com(weeds.tree, weeds.data$cover, weeds.data$plot,#
    weeds.data$taxa)
silly <- phylo4com(weeds.tree, weeds.data$cover, weeds.data$plot,#
+     weeds.data$taxa)
phylo4com(weeds.tree, weeds.data$cover, weeds.data$plot,#
    weeds.data$taxa)
phylo4com(weeds.tree, weeds.data$cover, weeds.data$plot,#
    weeds.data$taxa)->st
pae(st)
library(metricTester)
?metricsNnulls
metricsNnulls
?prepDat
?prepData
library(geiger)#
library(picante)#
#
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
prepped <- prepData(tree, cdm)
prepped
metricsNnulls
ls()
prepped
metricsNnulls
calcMetrics(prepped)
warnings()
calcMetrics
debug(calcMetrics)
calcMetrics(prepped)
?checkMetrics
checkMetrics(defineMetrics())
debug(calcMetrics)
calcMetrics(prepped)
getNode
ecoPDcorr
?pae
pae(weeds)
metrics <- checkMetrics(metrics)
cdm
prepped <- prepData(tree, cdm)
prepped
results <- calcMetrics(prepped)
?debug
undebug(calcMetrics)
checkMetrics()
checkMetrics(x)
checkMetrics(metrics)
checkMetrics(NULL)
prepped
metricTester::naw_mpd(prepped)
metricTester:::naw_mpd(prepped)
metricTester:::Haed(prepped)
metricTester:::my_PD_Cadotte(prepped)
metricTester:::Eed(prepped)
warnings()
metricTester:::Hed(prepped)
?eed
aed(weeds)
haed(weeds)
ls
ls()
class(st)
pae(st)
haed(st)
metricTester:::Hed(prepped)
hed(st)
hed
library(ecoPDcorr)
?hed
hed(weeds)
library(metricTester)
packageVersion("phylobase")
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=100)#
#
system.time(multiLinkerCL(tree=tree, arena.length=316, mean.log.individuals=4, #
 	length.parameter=1000, sd.parameter=40, max.distance=20, proportion.killed=0.2, #
	competition.iterations=60, no.quadrats=20, quadrat.length=sqrt(1000), #
	concat.by="richness", randomizations=1000, cores=8, iterations=10, prefix="test2"))
library(devtools)
install_github("metricTester", username="eliotmiller")
library(metricTester)#
#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=100)#
#
system.time(multiLinker(tree=tree, arena.length=316, mean.log.individuals=4, #
 	length.parameter=1000, sd.parameter=40, max.distance=20, proportion.killed=0.2, #
	competition.iterations=60, no.quadrats=20, quadrat.length=sqrt(1000), #
	concat.by="richness", randomizations=1000, cores=8, iterations=10, prefix="test2"))
library(ecoPDcorr)
library(devtools)
install_github("ecoPDcorr", username="eliotmiller")
library(ecoPDcorr)
packageVersion("phylobase")
install.packages("phylobase")
library(ecoPDcorr)
library(ecoPDcorr)#
#
hed(weeds)
pae(weeds)
iac(weeds)
haed(weeds)
eaed(weeds)
eed(weeds)
aed
aed(weeds)
hed(weeds)
eed(weeds)
aed(weeds)
pae(weeds)
iac(weeds)
haed(weeds)
eaed(weeds)
eed(weeds)
hed(weeds)
simpson(weeds)
simpson(weeds, method="phylogenetic")
pd(weeds)
install.packages("phylobase")
library(ecoPDcorr)
hed(weeds)
eaed(weeds)
hed(weeds)
ecoPD(weeds)
ecoPD(weeds, method="poly")
ecoPDcorr:::ecoPD(weeds, method="poly")
library(devtools)
install_github("ecoPDcorr", username="eliotmiller")
library(ecoPDcorr)
hed(weeds)
eaed(weeds)
library(methods)
hed(weeds)
remove.packages("ecoPD")
library(metricTester)
pae(weeds)
hed(weeds)
aed(weeds)
packageVersion("ecoPDcorr")
packageVersion("phylobase")
library(metricTeser)
library(metricTester)
?metricsNnullsCL()
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=3))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=3, cores=1))
metricsNnullsCL
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=3, cores=3))
library(devtools)
load_all()
?foreach
load_all()
metricsNnullsCL
?metricsNnullsCL
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)#
#
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=3))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=3, cores=3))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=3, cores=1))
load_all()
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=3, cores=1))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=3, cores=3))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=8, cores=1))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=8, cores=8))
str(rawResults)
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=8, cores=8))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=8, cores=1))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=20, cores=1))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=20, cores=8))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=40, cores=8))
str(rawResults)
length(rawResults)
results <- reduceRandomizations(rawResults)
str(results)
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=40, cores=1))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=40, cores=8))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=80, cores=8))
system.time(rawResults <- metricsNnullsCL(tree, cdm, randomizations=80, cores=1))
25/9
results <- reduceRandomizations(rawResults)
str(results)
642+361
cluster
load_all()
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=1))
load_all()
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=1))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=8))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=1, cluster=TRUE))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=16, cores=8, cluster=TRUE))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=32, cores=8, cluster=TRUE))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=64, cores=8, cluster=TRUE))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=64, cores=8, cluster=FALSE))
system.time(rawResults <- metricsNnulls(tree, cdm, randomizations=64, cores=1, cluster=FALSE))
19.28/4.3
