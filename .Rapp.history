dists <- cophenetic(tree)
head(dists)
test <- apply(dists, 1, mean)
test
hist(test)
plot(tree)
plot(tree, cex=0/7)
plot(tree, cex=0.7)
tree <- sim.bdtree(stop="taxa", n=20)
dists <- cophenetic(tree)
plot(tree)
test <- apply(dists, 1, mean)
test
min(test)
distances
?ses.mpd
tree2 <- compute.brlen(tree, 1)
plot(tree2)
dists2 <- cophenetic(tree2)
dists2
apply(dists2, 1, mean)
hist(dists2)
hist(dists)
dists <- 1:50
sample(dists, 5)
ups <- -5:5
usp
ups
sample(ups, 5)
x
x <- c(3,12,14,23,28,34,43,46)
y <- c(5,1,-4,2,-3,-2,0,5)
coords <- cbind(x,y)
coords
plot(coords)
x1 <- x
y1 <- y+50
y1
coords <- data.frame(x,y,x1,y1)
coords
plot(coords)
plot(coords[,1:2])
plot(coords[,1:2], xlim=c(0,50))
plot(coords[,1:2], xlim=c(0,50), ylim=c(-4,55))
plot(coords[,1:2], xlim=c(0,50), ylim=c(-4,55), pch=20)
plot(coords[,1:2], xlim=c(0,50), ylim=c(-4,55), pch=20, cex=2)
segments(x0=0, x1=50, y0=0, y1=0)
points(x=coords[,3], y=coords[,4])
plot(coords[,1:2], xlim=c(0,50), ylim=c(-4,55), pch=20, cex=2)
segments(x0=0, x1=50, y0=0, y1=0)
points(x=coords[,3], y=coords[,4], pch=20, cex=3)
plot(coords[,1:2], xlim=c(0,50), ylim=c(-4,55), pch=20, cex=2)
segments(x0=0, x1=50, y0=0, y1=0)
points(x=coords[,3], y=coords[,4], pch=20, cex=2)
segments(x0=coords[1,1], y0=coords[1,2], x1=coords[1,3], y1=coords[1,4], lty=2)
segments(x0=coords[2,1], y0=coords[2,2], x1=coords[2,3], y1=coords[2,4], lty=2)
segments(x0=coords[3,1], y0=coords[3,2], x1=coords[3,3], y1=coords[3,4], lty=2)
segments(x0=coords[4,1], y0=coords[4,2], x1=coords[4,3], y1=coords[4,4], lty=2)
segments(x0=coords[5,1], y0=coords[5,2], x1=coords[5,3], y1=coords[5,4], lty=2)
segments(x0=coords[6,1], y0=coords[6,2], x1=coords[6,3], y1=coords[6,4], lty=2)
segments(x0=coords[7,1], y0=coords[7,2], x1=coords[7,3], y1=coords[7,4], lty=2)
segments(x0=coords[8,1], y0=coords[8,2], x1=coords[8,3], y1=coords[8,4], lty=2)
3>=3
library(devtools)
load_all()
dev_help("simulateComm")
library(geiger)#
library(picante)#
#
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1))#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)
cdm
allMetrics(tree, cdm)
allMetricsNull.csv(tree, cdm, "richness", 1, "delete.csv")
load_all()
load_all()
allMetricsNull.csv
allMetricsNull.csv(tree, cdm, "richness", 1, "delete.csv")
allMetricsNull.csv(tree, cdm, "richness", 1, "delete.csv")
allMetricsNull.csv(tree, cdm, "richness", 1, "delete.csv")
allMetricsNull.csv(tree, cdm, "richness", concatBYrichness=TRUE, 1, "delete.csv")
allMetricsNull.csv(tree, cdm, "richness", concatBYrichness=FALSE, 1, "delete.csv")
cdm
dim(cdm)
dim(cdm)[1]
load_all()
allMetrics
dev_help("allMetrics")
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1))#
#
cdm <- simulateComm(tree, min.rich=10, max.rich=25, abundances=sim.abundances)
cdm
results <- allMetrics(tree, cdm)
results
load_all()
simulateComm(tree,10,25,sim.abundances)
simulateComm(tree,10,25,sim.abundances)
simulateComm(tree,10,25,sim.abundances)
simulateComm(tree,10,25,sim.abundances)
load_all()
load_all()
simulateComm(tree,10,25,sim.abundances)
cdm <- simulateComm(tree,10,25,sim.abundances)
cdm
allMetrics(tree,cdm)
allMetricsNull.csv(tree,cdm,"richness",1,"delete.csv")
load_all()
dev_help("summaries")
possibilities <- read.csv("delete.csv")
possibilites
possibilities
load_all()
dev_help("summaries")
expectations <- ddply(possibilities, .(richness), summaries)
library(plyr)
expectations <- ddply(possibilities, .(richness), summaries)
expectations <- ddply(possibilities, .(richness), summaries)
load_all()
expectations <- ddply(possibilities, .(richness), summaries)
expectations
expectations <- ddply(possibilities, .(metricNames), summaries)
head(possibilities)
expectations <- ddply(possibilities, .(quadratNames), summaries)
expectations
load_all()
document()
document()
allMetrics(tree,cdm)
allMetricsNull.csv(tree,cdm,"frequency",2,"delete.csv")
simulations
simulations <- read.csv("delete.csv")
summ.results <- ddply(simulations, .(richness), summaries)
summ.results
head(simulations)
allMetrics(tree,cdm)
summ.results <- ddply(simulations, .(quadratNames), summaries)
summ.results
summ.results <- ddply(simulations, .(richness), summaries)
summ.results
allMetricsNull.csv(tree,cdm,"frequency",5,"delete.csv")
simulations <- read.csv("delete.csv")
head(simulations)
summ.results <- ddply(simulations, .(richness), summaries)
summ.results
summ.results <- ddply(simulations, .(quadratNames), summaries)
summ.results
observed <- allMetrics(tree, cdm)
observed
merge(observed, summ.results, sort=FALSE)
head(observed)
head(summ.results)
dim(observed)
dim(summ.results)
merge(observed, summ.results, sort=FALSE)
ddply(simulations, .(richness), summaries)
ddply(simulations, .(richness), summaries)->summ.results
dim(summ.results)
merge(observed, summ.results, sort=FALSE)
cdm
apply(cdm,1,lengthNonZeros)
simulateComm(tree,10,25,sim.abundances)
simulateComm(tree,10,25,sim.abundances)->cdm
apply(cdm,1,lengthNonZeros)
dev_help("quadratPlacer")
dev_help("quadratContents")
library(geiger)#
library(colorRamps)#
#
temp <- phyloNtraits(50)#
#
scaled <- scaler(temp[[2]], min.arena=0, max.arena=300)#
#
phydistmatrix <- cophenetic(temp[[1]])#
#
#define a color for each species#
cols <- blue2green2red(nrow(phydistmatrix))#
#
positions <- locationSampler(phyloNtraits.results=temp, scaled.results=scaled, mean.log.individuals=4, length.parameter=5000, sd.parameter=50)#
#
#plot the arena. don't close the window#
plot(positions$X, positions$Y, pch=20, cex=0.5, xlim=c(0,300), ylim=c(0,300), col=cols[positions$individuals])#
#
bounds <- quadratPlacer(no.quadrats=15, x_max=300, y_max=300, quadrat_size=50)#
#
#plot the arena. don't close the window#
plot(positions$X, positions$Y, pch=20, cex=0.5, xlim=c(0,300), ylim=c(0,300), col=cols[positions$individuals])#
#
quadratPlotter(bounds)#
#
#this community data matrix is not in picante format, use t()#
temp.cdm <- quadratContents(positions, bounds)
temp.cdm
cdm <- t(temp.cdm)
cdm
quadratNames <- paste("quadrat",1:dim(cdm)[1], sep="")#
#
		dimnames(cdm)[[1]] <- quadratNames
cdm
rm(quadratNames)
cdm
apply(cdm, 1, lengthNonZeros)
plot(temp[[2]])
plot(temp[[1]])
tree <- temp[[1]]
allMetricsNull.csv(tree, cdm, "frequency", 5, "delete.csv")
simulations <- read.csv("delete.csv")
ddply(simulations, .(richness), summaries)
ddply(simulations, .(quadratNames), summaries)
summ.results <- ddply(simulations, .(richness), summaries)
dim(summ.results)
observed <- allMetrics(tree, cdm)
dim(observed)
dim(summ.results)
results <- merge(observed, summ.results, sort=FALSE)
dim(results)
results
summ.results <- ddply(simulations, .(quadratNames), summaries)
results <- merge(observed, summ.results, sort=FALSE)
dim(results)
results
names(observed)
length(names(observed))
2+19
3:2+19
3:(2+19)
metric.names <- names(observed)[3:(2+no.metrics)]
metric.names <- names(observed)[3:(2+19)]
metric.names
length(metric.names)
results
dim(results)
metric.names <- names(observed)[3:(2+no.metrics)]#
#
		sig.results <- list()#
#
		for(j in 1:length(metric.names))#
		{#
			sig.results[[j]] <- sigTest(results, metric.names[j])#
		}
metric.names <- names(observed)[3:(2+19)]#
#
		sig.results <- list()#
#
		for(j in 1:length(metric.names))#
		{#
			sig.results[[j]] <- sigTest(results, metric.names[j])#
		}
sig.results
sig.results <- as.data.frame(sig.results)
sig.results
names(sig.results) <- metric.names
sig.results
output <- output + typeI(sig.results, expectation=1, wrong=2)
output <- matrix(0, nrow=19, ncol=3)
output
output <- output + typeI(sig.results, expectation=1, wrong=2)
output
summ.results <- ddply(simulations, .(richness), summaries)
dim(summ.results)
results <- merge(observed, summ.results, sort=FALSE)
dim(results)
length(metric.names)
sig.results <- list()#
#
		for(j in 1:length(metric.names))#
		{#
			sig.results[[j]] <- sigTest(results, metric.names[j])#
		}
sig.results
sig.results <- as.data.frame(sig.results)
dim(sig.results)
names(sig.results) <- metric.names
sig.results
results
output <- matrix(0, nrow=no.metrics, ncol=3)
output <- matrix(0, nrow=19, ncol=3)
sig.results
output <- output + typeI(sig.results, expectation=expectation, wrong=wrong)
output <- output + typeI(sig.results, expectation=1, wrong=2)
output
load_all()
document()
dev_help("simulator")
document()
dev_help("simulator")
document()
dev_help("simulator")
library(ape)#
library(geiger)#
library(colorRamps)#
library(plyr)#
library(picante)#
#
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="richness", concatBYrichness=TRUE no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
document()
dev_help("simulator")
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="richness", concatBYrichness=TRUE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="richness", concatBYrichness=FALSE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
document()
load_all()
simulator
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="richness", concatBYrichness=FALSE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="richness", concatBYrichness=TRUE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="frequency", concatBYrichness=FALSE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
simulator(no.species=50, x_min=0, x_max=300, y_min=0, y_max=300, no.quadrats=15,#
quadrat_size=50, mean.log.individuals=4, length.parameter=5000, sd.parameter=50,#
null.method="frequency", concatBYrichness=TRUE, no.randomizations=2, expectation=1,#
wrong=2, no.metrics=19, iterations=3, temp.file="deleteme.csv",#
output.file="confused.csv")
load_all()
document()
check()
