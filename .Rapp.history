plot(results$ecolSESinterMPDdispersal~results$richness)
plot(results$morphoSESinterMPDdispersal~results$richness)
plot(results$morphoSESnawMPDdispersal~results$richness)
plot(results$ecolSESinterMPDdispersal~results$richness)
180/46
22.7125*145
22.7125*240
5451-3293
180/46*2
180/46*1/8
36*6
46*8
368-36
216/332
6-0.65
5.35*36
192.6/46
4.19*2
8.38/16
192.6/46
192.6/46*2
192.6/46*2/16
368+36
216/404
216/404*2
6-0.535
8*0.535
36*5.465
197/46
46*8
4.28*2
4*46
184/5
4.83*2
6.487*2
2*6/5
2/3*6/5
2/3/5
2/3/5*6
2/5*6
6-.535
12/1.75
25*7
24+2
26*7
7*1.5
8*1.5
12*26
5+12+2
5+5+6+2
18*128
18*128/12
192-4
192-41
?wilcox.test
load("/Users/eliotmiller/Documents/Writing and Other Work/Post-doc Work/Meliphagidae ecomorphology/outputs/ecomorphology20Sep2015.RData")
###########################################################################################
############################ Start libraries and set WD ###################################
###########################################################################################
#
library(caper)#
library(dplyr)#
library(picante)#
library(phytools)#
library(candisc)#
library(geomorph)#
library(geiger)#
library(plotrix)#
library(simpleFDis)#
library(fpc)#
library(metricTester)#
library(convevol)
ls()
head(CDM)
apply(CDM,2,sum)
apply(CDM,2,sum)->test
sesInterEcolObsDispersal
length(test)
dim(sesInterEcolObsDispersal)
theEcol <- sesInterEcolObsDispersal$SES
names(theEcol) <- row.names(sesInterEcolObsDispersal)
test
names(test)
test[names(test) %in% names(sesInterEcolObsDispersal)]
names(sesInterEcolObsDispersal)
names(theEcol)
test[names(test) %in% names(theEcol)]
length(test[names(test) %in% names(theEcol)])
cut <- test[names(test) %in% names(theEcol)]
plot(test~cut)
cut
length(cut)
test
length(test)
length(theEcol)
plot(theEcol~cut)
summary(lm(theEcol~cut))
theEcol <- sesInterEcolObsDispersal$observed
theEcol
names(theEcol) <- row.names(sesInterEcolObsDispersal)
summary(lm(theEcol~cut))
plot(theEcol~cut)
9*128
9*3785.41
9*3785.41/750
x <- rnorm(1000, 0,0.0001)#
lik <- function(pp){sum(dnorm(x, pp[1], pp[2], log=TRUE))}#
optim(c(0,0.0001), lik)
warnings()
like
lik
x
?optim
library(devtools)
load_all()
?phyloField
document()
document()
document()
document()
?phyloField
?phyloField
document()
?phyloField
document()
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
exampleField <- phyloField(tree=tree, cdm=relativeCDM(CDM), metric="naw.mpd")
document()
?phyloField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
exampleField <- phyloField(tree=tree, picante.cdm=cdm, metric="naw.mpd")
exampleField
class(exampleField)
document()
?phyloField
load_all()
document()
?phyloField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example phylogenetic field calculations#
exampleField <- phyloField(tree=tree, picante.cdm=cdm, metric="naw.mpd")
exampleField
?traitField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- dist(traits)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- traitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd")
head(traits)
document()
?traitField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- dist(traits[[2]])#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- traitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd")
head(dists)
document()
?traitField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- traitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd")
document()
?traitField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- traitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd")
exampleField
dists
head(dists)
exampleField
document()
?sesTraitField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd",#
null="richness", randomizations=10, cores=2)
exampleField
head(dists)
document()
?sesTraitField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="dispersal", randomizations=10, cores=2)
head(cdm)
cdm
head(trait.distance)
head(dists)
head(exampleField)
traitField(trait.distance=dists, picante.cdm=cdm, metric="naw.mpd")
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=1, cores=2)
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=2, cores=2)
exampleField
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=20, cores=2)
exampleField
tempMatrix <-#
		foreach(i=1:10, .combine='rbind') %dopar%#
		{#
			tempCDM <- randomizeMatrix(samp=cdm, null.model="richness")#
			traitField(dists, tempCDM, metric)#
		}
tempMatrix <-#
		foreach(i=1:10, .combine='rbind') %dopar%#
		{#
			tempCDM <- randomizeMatrix(samp=cdm, null.model="richness")#
			traitField(dists, tempCDM, "naw.mpd")#
		}
tempMatrix
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
randomizeMatrix(samp=cdm, null.model="richness")
tempMatrix
?dispersalNull
coordDF <- matrix(ncol=2, nrow=100)#
#
coordDF[,1] <- runif(n=100, min=40, max=50)#
coordDF[,2] <- runif(n=100, min=-130, max=-120)#
#
#convert to data frame, give column names. also give row names such as if the cells had#
#names (as they should or there'd be no way to track them)#
coordDF <- as.data.frame(coordDF)#
#
row.names(coordDF) <- paste("cell", 1:100, sep="")#
#
names(coordDF) <- c("latitude","longitude")#
#
#calculate the distances among all of these points. in the real program you're going to#
#want to calculate great arc distance or whatever it's called#
distances <- dist(coordDF, diag=TRUE, upper=TRUE)
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="dispersal",distances.among=distances, randomizations=20, cores=2)
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="dispersal", distances.among=distances, randomizations=20, cores=2)
dispersalNull(cdm, tree, distances)
tree
dim(cdm)
head(cdm)
head(distances)
distances <- as.matrix(distances)
dispersalNull(cdm, tree, distances)
head(distances)
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm1 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm2 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm3 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm4 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
#
#bind these into a list and use dplyr rbind_all to bind together. recast as data frame#
#
cdmList <- list(cdm1, cdm2, cdm3, cdm4)#
#
cdm <- rbind_all(cdmList)#
#
cdm <- as.data.frame(cdm)
dispersalNull(cdm, tree, distances)
head(cdm)
head(distances)
row.names(cdm) <- paste("cell", 1:100, sep="")
cdm[is.na(cdm)] <- 0
dispersalNull(cdm, tree, distances)
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="dispersal", distances.among=distances, randomizations=20, cores=2)
exampleField
cdm
?sesTraitField
head(dists)
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
head(exampleField)
head(cdm)
document()
?sesPhyloField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
2*3785.41
2*3785.41/1.75
2*3785.41/1000
sesPhyloField
sesTraitField
document()
?sesPhyloField
document()
?sesPhyloField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesPhyloField(tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
document()
load_all()
?sesPhyloField
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesPhyloField(tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
head(cdm)
load_all()
document()
?dispersalNull
#set up a matrix to simulate lat/long#
coordDF <- matrix(ncol=2, nrow=100)#
#
coordDF[,1] <- runif(n=100, min=40, max=50)#
coordDF[,2] <- runif(n=100, min=-130, max=-120)#
#
#convert to data frame, give column names. also give row names such as if the cells had#
#names (as they should or there'd be no way to track them)#
coordDF <- as.data.frame(coordDF)#
#
row.names(coordDF) <- paste("cell", 1:100, sep="")#
#
names(coordDF) <- c("latitude","longitude")#
#
#calculate the distances among all of these points. in the real program you're going to#
#want to calculate great arc distance or whatever it's called#
distances <- dist(coordDF, diag=TRUE, upper=TRUE)#
#
#turn it into a symmetric distance matrix#
distances <- as.matrix(distances)#
#
#simulate a regional phylogeny of 100 species#
tree <- sim.bdtree(b=1, d=0, stop="taxa", n=100)#
#
#simulate a community data matrix of 100 cells by 100 species. do it 4 times so that#
#you can use your simulateComm function and have it span a reasonable range of richness#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
cdm1 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm2 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm3 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
cdm4 <- simulateComm(tree, richness.vector=10:34, abundances=sim.abundances)#
#
#bind these into a list and use dplyr rbind_all to bind together. recast as data frame#
#
cdmList <- list(cdm1, cdm2, cdm3, cdm4)#
#
cdm <- rbind_all(cdmList)#
#
cdm <- as.data.frame(cdm)#
#
#fix as necessary manually here (i.e. make sure dimensions are 100 x 100), seems to#
#usually work. then give cell names#
#
row.names(cdm) <- paste("cell", 1:100, sep="")#
#
#fill NAs with 0s.#
#
cdm[is.na(cdm)] <- 0#
#
newCDM <- dispersalNull(cdm, tree, distances)
head(newCDM)
head(cdm)
apply(cdm,1,lengthNonZeros)
apply(newCDM,1,lengthNonZeros)
?sesPhyloField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesPhyloField(tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
load_all()
document()
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesPhyloField(tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
load_all()
document()
?sesTraitField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=10, cores=2)
exampleField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=100, cores=4)
exampleField
#simulate tree with birth-death process#
tree <- sim.bdtree(b=0.1, d=0, stop="taxa", n=50)#
#
#simulate trait evolution up the tree. Make 2-d trait space and find distances between#
#species in that space#
traits <- evolveTraits(tree)#
#
#calculate the distances betweeen species#
dists <- as.matrix(dist(traits[[2]], diag=T, upper=T))#
#
#simulate log-normal abundances#
sim.abundances <- round(rlnorm(5000, meanlog=2, sdlog=1)) + 1#
#
#simulate a community data matrix with these inputs#
cdm <- simulateComm(tree, richness.vector=10:25, abundances=sim.abundances)#
#
#example trait field calculations#
exampleField <- sesTraitField(trait.distance=dists, tree=tree, picante.cdm=cdm,#
metric="naw.mpd", null="richness", randomizations=1000, cores=4)
exampleField
document()
